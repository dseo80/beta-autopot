      		}

      		If ((!WindowQueuedFlaskEffects[k].HasKey("AmethystQueueEndtime")) || (A_TickCount>=(WindowQueuedFlaskEffects[k].AmethystQueueEndtime-lagCompensation)))
      		{
      			flaskNum:=GetMaxChargesFlaskOfType(FlasksData,"FlaskUtility7") ; Amethyst flask
      			If (flaskNum!="")
      			{
      				EffectDuration:=FlasksData[flaskNum].EffectDuration
      				WindowQueuedFlaskEffects[k].AmethystQueueEndtime:=A_TickCount+EffectDuration*100
      				If (trayNotIfications)
      				{
      					TrayTip, PoE AutoFlask Using Amethyst Flask %flaskNum%, %A_Space% , 2
      				}
      				hKey:=FlaskHotkey%flaskNum%
      				IfWinActive Path of Exile ahk_class Direct3DWindowClass
                  {
                     Sendinput, %hkey% Down}
                     Sendinput, %hkey% Up}
                  } 
                  Else
                  {
                     ControlSend,,%hkey% Down %hkey% Up}, % "ahk_id" hwnd
                  }
      				break
      			}
      		}
      	}

      	If (PlayerStats.MaxMana>0 && (currManaRatio<CurrentConfig.minManaRatioToDrink || PlayerStats.CurrMana<CurrentConfig.minManaToDrink))
      	{      
      		If ((!WindowQueuedFlaskEffects[k].HasKey("ManaQueueEndtime")) || (A_TickCount>=(WindowQueuedFlaskEffects[k].ManaQueueEndtime-lagCompensation)))
      		{
      			tflaskNum2:=GetMaxChargesFlaskOfType(FlasksData,"FlaskMana")
      			tflaskNum1:=GetMaxChargesFlaskOfType(FlasksData,"FlaskHybrid")
      			  
      			If ((tflaskNum1!=) && (tflaskNum2!=))
      			{
      				flaskNum:=(FlasksData[tflaskNum1].ChargesCurrent>FlasksData[tflaskNum2].ChargesCurrent) ? tflaskNum1 : tflaskNum2
      			}
      			Else
      			{
      				If (tflaskNum1!="")
      				{
      					flaskNum:=tflaskNum1
      				}
      				If (tflaskNum2!="")
      				{
      					flaskNum:=tflaskNum2
      				}
      			}

      			If (flaskNum!="")
      			{
      				EffectDuration:=FlasksData[flaskNum].EffectDuration
      				If (InStr(FlasksData[flaskNum].mod1,"Seething"))
      				{
      					WindowQueuedFlaskEffects[k].ManaQueueEndtime:=A_TickCount+500
      				}
      				Else If (InStr(FlasksData[flaskNum].mod2,"Seething"))
      				{
      					WindowQueuedFlaskEffects[k].ManaQueueEndtime:=A_TickCount+500
      				}
                  
      				Else If ((InStr(FlasksData[flaskNum].mod1,"Panicked")) And ((PlayerStats.CurrHP/PlayerStats.MaxHP)<=0.35)) ; "Low Life" can be caused by auras hp reservation from blood magic
      				{
      					WindowQueuedFlaskEffects[k].ManaQueueEndtime:=A_TickCount+500
      				}
      				Else If ((InStr(FlasksData[flaskNum].mod2,"Panicked")) And ((PlayerStats.CurrHP/PlayerStats.MaxHP)<=0.35)) ; "Low Life" can be caused by auras hp reservation from blood magic
      				{
      					WindowQueuedFlaskEffects[k].ManaQueueEndtime:=A_TickCount+500
      				}
                 
      				Else
      				{
      					WindowQueuedFlaskEffects[k].ManaQueueEndtime:=A_TickCount+EffectDuration*100
      				}
      				If (trayNotIfications)
      				{
      					TrayTip, PoE AutoFlask Using Mana Flask %flaskNum%, %A_Space% , 2
      				}
      				hKey:=FlaskHotkey%flaskNum%
      				IfWinActive Path of Exile ahk_class Direct3DWindowClass
                  {
                     Sendinput, %hkey% Down}
                     Sendinput, %hkey% Up}
                  } 
                  Else
                  {
                     ControlSend,,%hkey% Down %hkey% Up}, % "ahk_id" hwnd
                  }
      				Break
      			}
      		}
      	}
      }

		If (PlayerStats.PlayerActionID!="" && PlayerStats.PlayerActionID!=128 && PlayerStats.PlayerActionID!=90)
		{
			MovementTimer:= A_TickCount
		}
		;TODO MovementTimer%A_Index%

		If(QuickSilverCheck && QuicksilverBuff=0)
		{
			If (PlayerStats.InCity!="" && PlayerStats.InCity=65537)
			{
				If (PlayerStats.PanelWaypoint=65536 && PlayerStats.PanelInventory=65536 && PlayerStats.PanelSkillTree=65536 && PlayerStats.PanelSocial=65536)
				{
					If (PlayerStats.ChatStatus!="" && PlayerStats.ChatStatus=65536)
					{
						If (PlayerStats.PlayerActionID!="" && (PlayerStats.PlayerActionID=128 || PlayerStats.PlayerActionID=90))
						{
							If (A_TickCount>=MovementTimer+CurrentConfig.QuickSilverTimer)
							{
								If ((!WindowQueuedFlaskEffects[k].HasKey("QuickQueueEndtime")) || (A_TickCount>=(WindowQueuedFlaskEffects[k].QuickQueueEndtime-lagCompensation)))
								{
									flaskNum:=GetMaxChargesFlaskQuickSilver(FlasksData,"FlaskUtility6") ; QuickSilver flask
									If (flaskNum!="")
									{
										EffectDuration:=FlasksData[flaskNum].EffectDuration
										WindowQueuedFlaskEffects[k].QuickQueueEndtime:=A_TickCount+EffectDuration*100
										If (trayNotIfications)
										{
											TrayTip, PoE AutoFlask Using QuickSilver Flask %flaskNum%, %A_Space% , 2
										}
										hKey:=FlaskHotkey%flaskNum%
										IfWinActive Path of Exile ahk_class Direct3DWindowClass
                              {
                                 Sendinput, %hkey% Down}
                                 Sendinput, %hkey% Up}
                              } 
                              Else
                              {
                                 ControlSend,,%hkey% Down %hkey% Up}, % "ahk_id" hwnd
                              }
										break
									}
								}
							}
						}
					}
				}
			}
		}

		If(QuickSilverCheck2 && QuicksilverBuff=0)
		{
			If (PlayerStats.InCity!="" && PlayerStats.InCity=65537)
			{
				If (PlayerStats.ChatStatus!="" && PlayerStats.ChatStatus=65536)
				{
					If (PlayerStats.PanelWaypoint=65536 && PlayerStats.PanelInventory=65536 && PlayerStats.PanelSkillTree=65536 && PlayerStats.PanelSocial=65536)
					{
						If (PlayerStats.PlayerActionID!="" && (PlayerStats.PlayerActionID=128 || PlayerStats.PlayerActionID=90))
						{
							If (A_TickCount>=MovementTimer+CurrentConfig.QuickSilverTimer)
							{
								If ((!WindowQueuedFlaskEffects[k].HasKey("QuickQueueEndtime")) || (A_TickCount>=(WindowQueuedFlaskEffects[k].QuickQueueEndtime-lagCompensation)))
								{
									flaskNum:=GetMaxChargesFlaskQuickSilver2(FlasksData,"FlaskUtility6") ; QuickSilver flask
									If (flaskNum!="")
									{
										EffectDuration:=FlasksData[flaskNum].EffectDuration
										WindowQueuedFlaskEffects[k].QuickQueueEndtime:=A_TickCount+EffectDuration*100
										If (trayNotIfications)
										{
											TrayTip, PoE AutoFlask Using QuickSilver flask %flaskNum%, %A_Space% , 2
										}
										hKey:=FlaskHotkey%flaskNum%
										IfWinActive Path of Exile ahk_class Direct3DWindowClass
                              {
                                 Sendinput, %hkey% Down}
                                 Sendinput, %hkey% Up}
                              } 
                              Else
                              {
                                 ControlSend,,%hkey% Down %hkey% Up}, % "ahk_id" hwnd
                              }
										break
									}
								}
							}
						}
					}
				}
			}
		}
      
      
      ++PanickedTimer  ;TODO better way


      If (PlayerStats.ChatStatus!="" && PlayerStats.ChatStatus=65536)
      {
         ChatCheckTimer:= 1
      }

      If (PlayerStats.ChatStatus!="" && PlayerStats.ChatStatus=65537)
      {
         If (A_TickCount>=(ChatStatusTimer+50))
         {
            If (IsInGame(hwnd))
            {
               IfWinActive Path of Exile ahk_class Direct3DWindowClass
               {
                  ResyncTimer:= 0
                  TradeSpam:= 0
                  GuiControl, , TradeSpam, 0
                  GuiControl, , TradeSpamUpdate, 0
                  IniWrite, 0 , Config.ini, Config, TradeSpam
                  TradeChannel:= 1
                  tradechat:= 0
                  TradeTimer:= 0
                  TradeStep:= 3
                  TradeSpamTimer:= 3
               }
            }
         }
         Else
         {
            If ChatCheckTimer = 1
            {
               ChatStatusTimer:= A_TickCount
               ChatCheckTimer:= 0
            }
         }
      }

      If TradeSpam>0
      {
         If (A_TickCount>=(TradeSpamTimer+TradeSpam*60000))
         {
            tradechat:= 1
            TradeSpamTimer:= A_TickCount
         }
         Else If TradeSpamTimer = 3
         {
            tradechat:= 1
            TradeSpamTimer:= A_TickCount
         }
      }

      If tradechat = 1
      {
         SendMode, Input
         If (A_TickCount>=TradeTimer+1000+(TradeSpam*2000))
         {
            If (PlayerStats.ChatStatus!="" && PlayerStats.ChatStatus=65536)
            {
               If (IsInGame(hwnd))
               { 
                  If (PlayerStats.PanelWaypoint=65536 && PlayerStats.PanelInventory=65536 && PlayerStats.PanelSkillTree=65536 && PlayerStats.PanelSocial=65536)
                  {
                     IfWinActive Path of Exile ahk_class Direct3DWindowClass
                     {
                        SendMode Input
                        GetKeyState, stateSH, SHIfT
                        If stateSH = D
                        {
                           Sendinput {SHIfT up}
                        }
                        If (TradeStep = 1)
                        {
                           Send {NumpadEnter}
                           Send /trade %TradeChannel%
                           Send {NumpadEnter}
                           TradeStep:= 2
                           TradeTimer:= A_TickCount
                        }
                        Else If (TradeStep = 2)
                        {
                           Send {NumpadEnter}{Up 2}{NumpadEnter}
                           TradeStep:= 3
                           TradeTimer:= A_TickCount
                        }
                        Else If (TradeStep = 3)
                        {
                           If (TradeChannel<10)
                           {
                              TradeChannel++
                              TradeStep:= 1
                              TradeTimer:= A_TickCount
                           }
                           Else
                           {
                              TradeChannel:= 1
                              tradechat:= 0
                              TradeTimer:= 0
                              TradeStep:= 1
                           }
                        }
                     }
                     Else
                     {
                        SendMode Input
                        GetKeyState, stateSH, SHIfT
                        If stateSH = D
                        {
                           Sendinput {SHIfT up}
                        }
                        If (TradeStep = 1)
                        {
                           SetKeyDelay, 60, 20
                           ControlSend,,{NumpadEnter}, % "ahk_id" hwnd
                           ControlSendRaw,,`/trade %TradeChannel%, % "ahk_id" hwnd
                           ControlSend,,{NumpadEnter}, % "ahk_id" hwnd
                           SetKeyDelay, 0, 0
                           TradeStep:= 2
                           TradeTimer:= A_TickCount
                        }
                        Else If (TradeStep = 2)
                        {
                           SetKeyDelay, 20, 20
                           ControlSend,,{NumpadEnter}{Up 2}{NumpadEnter}, % "ahk_id" hwnd
                           SetKeyDelay, 0, 0
                           TradeStep:= 3
                           TradeTimer:= A_TickCount
                        }
                        Else If (TradeStep = 3)
                        {
                           If (TradeChannel<10)
                           {
                              TradeChannel++
                              TradeStep:= 1
                              TradeTimer:= A_TickCount
                           }
                           Else
                           {
                              TradeChannel:= 1
                              tradechat:= 0
                              TradeTimer:= 0
                              TradeStep:= 1
                           }
                        }
                     }
                  }
               }
               ChatStatusTimer:= A_TickCount+99999999999
               ChatCheckTimer:= 1
            }
         }
      }

      ;--------------Debug Window Update------------------

      IfWinExist, Debug Window
      {
         MaxHPvalue:=PlayerStats.MaxHP
         GuiControl,4: , MaxHPvar , %MaxHPvalue%
         CurrHPvalue:=PlayerStats.CurrHP
         GuiControl,4: , CurrHPvar , %CurrHPvalue%
         ReservedHPFlatvalue:=PlayerStats.ReservedHPFlat
         GuiControl,4: , ReservedHPFlatvar , %ReservedHPFlatvalue%
         ReservedHPPercentvalue:=PlayerStats.ReservedHPPercent
         GuiControl,4: , ReservedHPPercentvar , %ReservedHPPercentvalue%
         MaxManavalue:=PlayerStats.MaxMana
         GuiControl,4: , MaxManavar , %MaxManavalue%
         CurrManavalue:=PlayerStats.CurrMana
         GuiControl,4: , CurrManavar , %CurrManavalue%
         ReservedManaFlatvalue:=PlayerStats.ReservedManaFlat
         GuiControl,4: , ReservedManaFlatvar , %ReservedManaFlatvalue%
         ReservedManaPercentvalue:=PlayerStats.ReservedManaPercent
         GuiControl,4: , ReservedManaPercentvar , %ReservedManaPercentvalue%
         MaxEShieldvalue:=PlayerStats.MaxEShield
         GuiControl,4: , MaxEShieldvar , %MaxEShieldvalue%
         CurrEShieldvalue:=PlayerStats.CurrEShield
         GuiControl,4: , CurrEShieldvar , %CurrEShieldvalue%
         PlayerActionIDvalue:=PlayerStats.PlayerActionID
         If (PlayerActionIDvalue=128 || PlayerActionIDvalue=90)
         {
            GuiControl,4: , PlayerActionIDvar , %PlayerActionIDvalue% (Moving)
         }
         Else If (PlayerActionIDvalue=2 || PlayerActionIDvalue=10 || PlayerActionIDvalue=12)
         {
            GuiControl,4: , PlayerActionIDvar , %PlayerActionIDvalue% (Attacking)
         }
         Else If (PlayerActionIDvalue=0)
         {
            GuiControl,4: , PlayerActionIDvar , %PlayerActionIDvalue% (Nothing)
         }
         Else If (PlayerActionIDvalue=64)
         {
            GuiControl,4: , PlayerActionIDvar , %PlayerActionIDvalue% (Dead)
         }
         Else
         {
            GuiControl,4: , PlayerActionIDvar , %PlayerActionIDvalue% (Unknown)
         }
         ChatStatusvalue:=PlayerStats.ChatStatus
         If (ChatStatusvalue=65537)
         {
            GuiControl,4: , ChatStatusvar , Opened
         }
         Else If (ChatStatusvalue=65536)
         {
            GuiControl,4: , ChatStatusvar , Closed
         }
         MouseOnEnemyStatusvalue:=PlayerStats.MouseOnEnemyStatus
         If (MouseOnEnemyStatusvalue=65537)
         {
            GuiControl,4: , MouseOnEnemyStatusvar , Yes
         }
         Else If (MouseOnEnemyStatusvalue=65536)
         {
            GuiControl,4: , MouseOnEnemyStatusvar , No
         }
         PanelWaypointvalue:=PlayerStats.PanelWaypoint
         If (PanelWaypointvalue=65537)
         {
            GuiControl,4: , PanelWaypointvar , Opened
         }
         Else If (PanelWaypointvalue=65536)
         {
            GuiControl,4: , PanelWaypointvar , Closed
         }
         PanelInventoryvalue:=PlayerStats.PanelInventory
         If (PanelInventoryvalue=65537)
         {
            GuiControl,4: , PanelInventoryvar , Opened
         }
         Else If (PanelInventoryvalue=65536)
         {
            GuiControl,4: , PanelInventoryvar , Closed
         }
         PanelSkillTreevalue:=PlayerStats.PanelSkillTree
         If (PanelSkillTreevalue=65537)
         {
            GuiControl,4: , PanelSkillTreevar , Opened
         }
         Else If (PanelSkillTreevalue=65536)
         {
            GuiControl,4: , PanelSkillTreevar , Closed
         }
         PanelSocialvalue:=PlayerStats.PanelSocial
         If (PanelSocialvalue=65537)
         {
            GuiControl,4: , PanelSocialvar , Opened
         }
         Else If (PanelSkillTreevalue=65536)
         {
            GuiControl,4: , PanelSocialvar , Closed
         }
         InCityvalue:=PlayerStats.InCity
         If (InCityvalue=65537)
         {
            GuiControl,4: , InCityvar , No
         }
         Else If (InCityvalue=65536)
         {
            GuiControl,4: , InCityvar , Yes
         }
         PanelInstanceManagervalue:=PlayerStats.PanelInstanceManager
         If (PanelInstanceManagervalue=65537)
         {
            GuiControl,4: , PanelInstanceManagervar , Opened
         }
         Else If (PanelInstanceManagervalue=65536)
         {
            GuiControl,4: , PanelInstanceManagervar , Closed
         }
         
         EnemyNamevalue:=PlayerStats.EnemyName
         GuiControl,4: , EnemyNamevar , %EnemyNamevalue%
         EnemyName2value:=PlayerStats.EnemyName2
         GuiControl,4: , EnemyName2var , %EnemyName2value%
         MapNamevalue:=PlayerStats.MapName
         GuiControl,4: , MapNamevar , %MapNamevalue%

         Loop, 5
         {
            Flask%A_Index%Typevalue:=FlasksData[A_Index].type
            value:=Flask%A_Index%Typevalue
            GuiControl,4: , Flask%A_Index%Typevar , %value%

            Flask%A_Index%ChargesCurrentvalue:=FlasksData[A_Index].ChargesCurrent
            value:=Flask%A_Index%ChargesCurrentvalue
            GuiControl,4: , Flask%A_Index%ChargesCurrentvar , %value%

            Flask%A_Index%ChargesPerUsevalue:=FlasksData[A_Index].ChargesPerUse
            value:=Flask%A_Index%ChargesPerUsevalue
            GuiControl,4: , Flask%A_Index%ChargesPerUsevar , %value%

            Flask%A_Index%mod1value:=FlasksData[A_Index].mod1
            value:=Flask%A_Index%mod1value
            GuiControl,4: , Flask%A_Index%mod1var , %value%

            Flask%A_Index%mod2value:=FlasksData[A_Index].mod2
            value:=Flask%A_Index%mod2value
            GuiControl,4: , Flask%A_Index%mod2var , %value%
         }

         BuffAmountvalue:=round(PlayerStats.BuffAmount)
         GuiControl,4: , BuffAmountvar , %BuffAmountvalue%

         Loop, 8
         {

            BuffName%A_Index%value:=PlayerStats.BuffName[A_Index]
            value:=BuffName%A_Index%value
            GuiControl,4: , Buff%A_Index%Namevar , %value%
